# overrides
alias ls='ls --color'
alias grep='grep --color'
alias lf='lf -single'
alias emacs='emacs -nw'
alias gdb='gdb --tui'
alias tmux='tmux -u'
alias dvtm='dvtm -m ^a -M zsh'
alias diff='diff --color -u'
alias x='xargs'
alias fd='fd | fzft'
alias xonotic='xonotic -basedir Games/Xonotic'

# alternatives ...
alias fzft='fzf-tmux'
alias mk='make'
alias lc='exa -lh --icons --sort type'
alias lman='man -M ~/Drives/root/usr/share/man'
alias pman='sudo pacman -S '

# ... turning to overrides
alias mv='mv -i -v'
alias rm='rm -I -v'
alias cp='cp -i -v'
alias ln='ln -i -v'

# editor
alias fvim='vim $(fd)'
alias ffvim='vim $(fzf)'

# functions
alias clean='echo "" > /home/mh/.zsh_history'
alias reload='source /home/mh/.alias'
alias lang='bat -l'
alias wiki='vim /home/mh/Wiki/index.md'
alias journal='vim /home/mh/Wiki/Journal/index.md'
alias exst='echo $?'
alias gget='doas cat ~mh/.github | xclip -selection clipboard'

# function definition
function cmdof {
	[[ -z "$1" ]] &&
		echo [ !! ] Argument required &&
		return 1
	PID=$(pidof $1)

	[[ -z "$PID" ]] &&
		echo [ !! ] No such process \'$1\' &&
		return 1

	NO=$(echo $PID | awk '{print NF}')

	for (( i = 1; i <= $NO; i++ ))
	do
		pid=$(echo $PID | awk "{print \$$i}")
		printf "pid $pid: command $(cat /proc/$pid/cmdline) "
		printf "\n"
	done
}

function unitf {
	echo -- UNIT $2 --
	echo -------------
	$1 $2 2>&1
	echo -------------
	cat $2
	echo -------------
}

function core {
	CORES=$(/bin/ls -1 /home/mh/Analysis/Core)
	while read core; do
		date=$(date -d @$(echo $core | cut -d- -f2 | cut -d. -f1 ) +%d-%b-%g)
		/bin/mv /home/mh/Analysis/Core/$core /home/mh/Analysis/Core/$(echo $core | cut -d- -f1)-$date.core
		echo [ OK ] Done!!
	done <<< $(echo -e "$CORES")
}

function cmd {
	pushd /home/mh/.wine/dosdevices/c:/users/mh/Desktop
	wine /home/mh/C:/windows/system32/cmd.exe
	popd
}
